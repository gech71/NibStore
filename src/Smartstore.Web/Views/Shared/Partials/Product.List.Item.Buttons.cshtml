@using Smartstore.Core.Checkout.Cart
@using Smartstore.Web.Models.Catalog

@model Smartstore.Web.Models.Catalog.ProductSummaryItemModel

@{
    var list = Model.Parent;
    var price = Model.Price;
    var isLinesMode = list.ViewMode == ProductSummaryViewMode.List;
    string artDetailUrl = ViewBag.ArtDetailUrl;

    bool isGuest = !User.Identity.IsAuthenticated;
    bool anonymousCheckoutAllowed = true; // Adjust this according to your logic

    string checkoutUrl = (anonymousCheckoutAllowed && isGuest)
        ? Url.RouteUrl("Login", new { checkoutAsGuest = true, returnUrl = Url.RouteUrl("Checkout") })
        : Url.RouteUrl("Checkout");

    string antiForgeryToken = "";

    // Render Anti-Forgery token value for AJAX calls (if token is generated in layout/form)
    var antiforgery = Context.RequestServices.GetService(typeof(Microsoft.AspNetCore.Antiforgery.IAntiforgery)) as Microsoft.AspNetCore.Antiforgery.IAntiforgery;
    if (antiforgery != null)
    {
        var tokens = antiforgery.GetAndStoreTokens(Context);
        antiForgeryToken = tokens.RequestToken;
    }

    void RenderBuyButton(bool blockStyle)
    {
        var cssClasses = blockStyle ? "btn-block d-none d-md-block rounded" : "btn-lg art-btn col rounded";
        if (!blockStyle && isLinesMode)
        {
            cssClasses += " d-md-none";
        }

        if (!Model.Price.CallForPrice)
        {
            var addToCartUrl = Url.Action("AddProductSimple", "ShoppingCart", new
            {
                productId = Model.Id,
                forceredirection = Model.Parent.ForceRedirectionAfterAddingToCart,
                area = ""
            });
            var title = Model.Price.AvailableForPreOrder
                ? T("ShoppingCart.PreOrder")
                : T("ShoppingCart.AddToCart");

            <a data-href="@addToCartUrl"
               href="#"
               class="btn btn-primary ajax-cart-link px-sm-2 @cssClasses add-to-cart-button"
               title="@title"
               data-toggle="@(!blockStyle ? "tooltip" : "")"
               data-placement="bottom"
               rel="nofollow"
               data-type="cart"
               data-action="add">
                <i class="fa fa-cart-arrow-down"></i>
                @if (blockStyle)
                {
                    <span>@title</span>
                }
                else if (isLinesMode)
                {
                    <span class="d-none d-sm-inline">@title</span>
                }
            </a>
        }
        else
        {
            <a href="@Url.Action("AskQuestion", "Product", new { id = Model.Id, area = "" })"
               class="btn @(blockStyle ? "btn-light" : "btn-gray") @cssClasses"
               data-toggle="@(!blockStyle ? "tooltip" : "")"
               data-placement="bottom"
               rel="nofollow"
               title="@T("Products.CallForPrice.GoToForm")">
                <i class="fa fa-question"></i>
                @if (blockStyle)
                {
                    <span>@T("Products.CallForPrice.GoToForm")</span>
                }
                else if (isLinesMode)
                {
                    <span class="d-none d-sm-inline">@T("Products.CallForPrice.GoToForm")</span>
                }
            </a>
        }
    }

    void RenderBuyNowButton(bool blockStyle)
    {
        var cssClasses = blockStyle
            ? "btn btn-brown btn-lg art-btn col btn-block d-none d-md-block rounded"
            : "btn btn-brown btn-lg art-btn col rounded";

        if (!blockStyle && isLinesMode)
        {
            cssClasses += " d-md-none";
        }

        <a href="javascript:void(0);"
           class="@cssClasses"
           rel="nofollow"
           title="Buy Now"
           data-toggle="tooltip"
           data-placement="bottom"
           onclick="buyNow('@Url.Action("AddProductSimple", "ShoppingCart", new { productId = Model.Id })')">
            <span>Buy</span>
        </a>
    }
}

<!-- Hidden form for productId and quantity -->
<form id="pd-form" method="post" style="display:none;">
    <input type="hidden" name="productId" value="@Model.Id" />
    <label for="quantity" class="sr-only">Quantity</label>
    <input type="number" id="quantity" name="quantity" value="1" min="1" />
    @Html.AntiForgeryToken()
</form>

@if (isLinesMode && !price.DisableBuyButton && list.BuyEnabled)
{
    <div class="mt-3">
        <div class="d-flex gap-2">
            @{ RenderBuyButton(true); }
            @{ RenderBuyNowButton(true); }
        </div>
    </div>
}

<div class="row no-gutters art-btn-group @(isLinesMode ? "mt-3" : "")">
    @if (!price.DisableBuyButton && list.BuyEnabled)
    {
        <div class="d-flex gap-2 w-100">
            @{ RenderBuyButton(false); }
            @{ RenderBuyNowButton(false); }
        </div>
    }
    @* @if (!price.DisableWishlistButton && list.WishlistEnabled)
    {
        <a data-href="@Url.Action("AddProductSimple", "ShoppingCart", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, area = "" })"
           href="#"
           class="btn btn-secondary btn-lg art-btn col ajax-cart-link add-to-wishlist-button"
           title="@T("Categories.Wishlist")"
           data-toggle="tooltip" data-placement="bottom"
           rel="nofollow"
           data-type="wishlist"
           data-action="add">
            <i class="fal fa-heart"></i>
        </a>
    }
    else if (isLinesMode)
    {
        <span class="art-btn-spacer col"></span>
    }
    @if (list.CompareEnabled)
    {
        <a data-href="@Url.Action("AddProductToCompare", "Catalog", new { id = Model.Id, area = "" })"
           href="#"
           class="btn btn-secondary btn-lg art-btn col ajax-cart-link add-to-compare-list-button"
           title="@T("Categories.Compare")"
           data-toggle="tooltip"
           data-placement="bottom"
           rel="nofollow"
           data-type="compare"
           data-action="add">
            <i class="fa fa-retweet"></i>
        </a>
    }
    else if (isLinesMode)
    {
        <span class="art-btn-spacer col"></span>
    }

    <a href="@Model.DetailUrl"
       class="btn btn-secondary btn-lg art-btn col product-details-button"
       title="@T("Products.Details")"
       data-toggle="tooltip"
       data-placement="bottom">
        <i class="fa fa-info"></i>
    </a>
</div> *@

<style>
.btn-brown {
    background-color: #8B4513 !important; /* or any brown shade you prefer */
    border-color: #8B4513 !important;
    color: #fff !important;
}
.btn-brown:hover,
.btn-brown:focus {
    background-color: #6b3310 !important;
    border-color: #6b3310 !important;
    color: #fff !important;
}

.btn, .art-btn {
    border-radius: 15px !important;
}
</style>

<script>
// Add this script to your view or a JS file
function buyNow(url) {
    // First, clear the cart
    fetch('/ShoppingCart/ClearCart', {
        method: 'POST',
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(() => {
        // Now add the product
        return fetch(url, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        });
    })
    .then(response => response.json())
    .then(data => {
        if (data.redirect) {
            window.location.href = data.redirect;
        } else if (data.success) {
            window.location.href = '/checkout'; // or use your checkout route
        } else {
            alert(data.message || 'Could not add product to cart.');
        }
    })
    .catch(() => alert('An error occurred.'));
}
</script>