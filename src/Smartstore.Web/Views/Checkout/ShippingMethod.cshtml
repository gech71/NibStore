@using Smartstore.Web.Models.Checkout
@model CheckoutShippingMethodModel

@{
    Layout = "_Checkout";
    Assets.AppendTitleParts(T("PageTitle.Checkout.ShippingMethod"));
    Assets.BodyAttributes.AppendCssClass("no-offcanvas-cart content-overflow-initial");
    Assets.AddMetaRobots();

    var pickupMethod = Model.ShippingMethods.FirstOrDefault(sm => (sm.Name ?? "").ToLowerInvariant().Contains("store pickup"));
    var pickupMethodId = pickupMethod?.ShippingMethodId ?? 0;
}

<widget target-zone="order_progress">
    @await Component.InvokeAsync("CheckoutProgress", new { action = Model.ActionName })
</widget>

<div class="page shipping-method-page">
    <div class="page-title">
        <h1 class="h3">@T("Checkout.SelectShippingMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        <form asp-action="ShippingMethod" asp-controller="Checkout" method="post">
            <div id="validationSummary" class="alert alert-danger d-none mb-3"></div>

            <zone name="checkout_shipping_method_top" />

            <div class="order-summary-content">
                <div class="row cart-container">
                    <div class="col-lg-7 col-xl-8">
                        <partial name="ShippingMethodList" />
                    </div>
                    <div class="col-lg-5 col-xl-4">
                        <partial name="CheckoutOrderTotals" />
                    </div>
                </div>
            </div>

            <zone name="checkout_shipping_method_bottom" />
        </form>
    </div>
</div>

<script sm-target-zone="scripts" data-origin="shipping-method">
$(function () {
    // Highlight selected shipping method
    $('.checkout-data .opt-radio').on('change', function () {
        $('.checkout-data .opt-list-item').removeClass('active');
        var item = $(this).closest('.opt-list-item');
        item.addClass("active");

        $('#validationSummary').addClass('d-none').empty();
    });

    // Handle next step click
    $('.shipping-method-next-step-button').on('click', function () {
        if (!validateShippingMethodSelections()) {
            return false; // Stop progression
        }

        $('#nextstep').trigger('click');
        return false;
    });

    const storePickupMethodId = @pickupMethodId;

    // Check if store selections are valid for store pickup items
    function validateStoreSelections() {
        if (!storePickupMethodId) return true;

        const isStorePickupSelected = $(`input[name="shippingoption"][data-shippingmethodid="${storePickupMethodId}"]`).is(':checked');
        if (!isStorePickupSelected) return true;

        let isValid = true;
        $('.store-select').each(function () {
            if (!$(this).val()) {
                isValid = false;
                return false; // Exit loop early
            }
        });

        return isValid;
    }

    // Check if any items have no stock in any store
    function validateNoStoreStockItems() {
        const noStockItems = $('.no-store-no-stock');
        return noStockItems.length === 0;
    }

    // Combine all validations
    function validateShippingMethodSelections() {
        const validationSummary = $('#validationSummary');
        validationSummary.addClass('d-none').empty();

        // Check for items without store stock
        if (!validateNoStoreStockItems()) {
            validationSummary.removeClass('d-none').append(
                `<div>Some items have no available stores with sufficient stock. Please remove them before continuing your order.</div>`
            );
            $('html, body').animate({ scrollTop: validationSummary.offset().top - 20 }, 400);
            return false;
        }

        // Check for unselected stores
        if (!validateStoreSelections()) {
            validationSummary.removeClass('d-none').append(
                `<div>Please select a store for all items before proceeding.</div>`
            );
            $('html, body').animate({ scrollTop: validationSummary.offset().top - 20 }, 400);
            return false;
        }

        return true;
    }
});
//remove all Items which handleAddressInput no-store-no-stock store
$(function () {
    $(document).on('click', '.remove-item-x', function (e) {
        e.preventDefault();          // Prevent any default behavior (like scrolling or form submission)
        e.stopPropagation();         // Prevent bubbling up to parent dropdowns or handlers

        const $parentDiv = $(this).closest('.no-store-no-stock');
        const itemId = $parentDiv.data('item-id');

        if (!itemId) return;

        $.ajax({
            url: '/ShoppingCart/RemoveCartItem',
            method: 'POST',
            data: { itemId: itemId },
            success: function (response) {
                if (response.success) {
                    $parentDiv.closest('.product-item').remove();
                    // Optionally update the order totals or re-run validation here
                } else {
                    alert(response.message || 'Failed to remove the item.');
                }
            },
            error: function () {
                alert('Server error occurred while removing the item.');
            }
        });
    });
});


</script>
