@using Smartstore.Web.Models.Checkout
@model CheckoutShippingMethodModel

@{
    Layout = "_Checkout";
    Assets.AppendTitleParts(T("PageTitle.Checkout.ShippingMethod"));
    Assets.BodyAttributes.AppendCssClass("no-offcanvas-cart content-overflow-initial");
    Assets.AddMetaRobots();

    var pickupMethod = Model.ShippingMethods.FirstOrDefault(sm => (sm.Name ?? "").ToLowerInvariant().Contains("store pickup"));
    var pickupMethodId = pickupMethod?.ShippingMethodId ?? 0;
}

<widget target-zone="order_progress">
    @await Component.InvokeAsync("CheckoutProgress", new { action = Model.ActionName })
</widget>

<div class="page shipping-method-page">
    <div class="page-title">
        <h1 class="h3">@T("Checkout.SelectShippingMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        <form asp-action="ShippingMethod" asp-controller="Checkout" method="post">
            <div id="validationSummary" class="alert alert-danger d-none mb-3"></div>

            <zone name="checkout_shipping_method_top" />

            <div class="order-summary-content">
                <div class="row cart-container">
                    <div class="col-lg-7 col-xl-8">
                        <partial name="ShippingMethodList" />
                    </div>
                    <div class="col-lg-5 col-xl-4">
                        <partial name="CheckoutOrderTotals" />
                    </div>
                </div>
            </div>

            <zone name="checkout_shipping_method_bottom" />
            
        </form>
    </div>
</div>

<style>
    .store-select {
    width: 100%;
    max-width: 240px;
    padding: 6px 10px;
    font-size: 14px;
    border: 1px solid #ccc;
    border-radius: 4px;
}
</style>

<script sm-target-zone="scripts" data-origin="shipping-method">
    
$(function () {

    $('input[name="ByGroundAddress"]').val('');
    $('input[name="ByGroundLatitude"]').val('');
    $('input[name="ByGroundLongitude"]').val('');
    
    const storePickupMethodId = @pickupMethodId;

    function isStorePickupSelected() {
        return $(`input[name="shippingoption"][data-shippingmethodid="${storePickupMethodId}"]`).is(':checked');
    }

    function validateStoreSelections() {
        let isValid = true;
        $('.store-select').each(function () {
            if (!$(this).val()) {
                isValid = false;
                return false; // exit each loop
            }
        });
        return isValid;
    }

    function validateNoStoreStockItems() {
        return $('.no-store-no-stock').length === 0;
    }

    function validateShippingMethodSelections() {
        const validationSummary = $('#validationSummary');
        validationSummary.addClass('d-none').empty();

        if (!isStorePickupSelected()) {
            // If NOT store pickup, no need to validate store selection or stock
            return true;
        }

        // For store pickup selected, validate all
        if (!validateNoStoreStockItems()) {
            validationSummary.removeClass('d-none').append(
                `<div>Some items have no available stores with sufficient stock. Please remove them before continuing your order.</div>`
            );
            $('html, body').animate({ scrollTop: validationSummary.offset().top - 20 }, 400);
            return false;
        }

        if (!validateStoreSelections()) {
            validationSummary.removeClass('d-none').append(
                `<div>Please select a store for all items before proceeding.</div>`
            );
            $('html, body').animate({ scrollTop: validationSummary.offset().top - 20 }, 400);
            return false;
        }

        return true;
    }

    // Highlight selected shipping method on change
    $('.checkout-data .opt-radio').on('change', function () {
        $('.checkout-data .opt-list-item').removeClass('active');
        $(this).closest('.opt-list-item').addClass("active");

        $('#validationSummary').addClass('d-none').empty();
    });

    // Handle next step button click
    $('.shipping-method-next-step-button').on('click', function () {
        if (!validateShippingMethodSelections()) {
            return false;
        }
        $('#nextstep').trigger('click');
        return false;
    });

    // Remove items with no stock from store on remove click
    $(document).on('click', '.remove-item-x', function (e) {
        e.preventDefault();
        e.stopPropagation();

        const $parentDiv = $(this).closest('.no-store-no-stock');
        const itemId = $parentDiv.data('item-id');

        if (!itemId) return;

        $.ajax({
            url: '/ShoppingCart/RemoveCartItem',
            method: 'POST',
            data: { itemId: itemId },
            success: function (response) {
                if (response.success) {
                    $parentDiv.closest('.product-item').remove();
                    // Optionally update totals or revalidate here
                } else {
                    alert(response.message || 'Failed to remove the item.');
                }
            },
            error: function () {
                alert('Server error occurred while removing the item.');
            }
        });
    });
});
</script>

