@using Smartstore.Web.Models.Checkout

@model CheckoutShippingMethodModel

@{
    Layout = "_Checkout";
    Assets.AppendTitleParts(T("PageTitle.Checkout.ShippingMethod"));
    Assets.BodyAttributes.AppendCssClass("no-offcanvas-cart content-overflow-initial");
    Assets.AddMetaRobots();
}

<widget target-zone="order_progress">
    @await Component.InvokeAsync("CheckoutProgress", new { action = Model.ActionName })
</widget>

<div class="page shipping-method-page">
    <div class="page-title">
        <h1 class="h3">@T("Checkout.SelectShippingMethod")</h1>
    </div> 
    <div class="page-body checkout-data">
        <form asp-action="ShippingMethod" asp-controller="Checkout" method="post">
            <input type="hidden" name="ByGroundAddress" id="HiddenByGroundAddress" />
            <zone name="checkout_shipping_method_top" />

            <div class="order-summary-content">
                <div class="row cart-container">
                    <div class="col-lg-7 col-xl-8">
                        <partial name="ShippingMethodList" />
                    </div>
                    <div class="col-lg-5 col-xl-4">
                        <partial name="CheckoutOrderTotals" />
                    </div>
                </div>
            </div>

            <zone name="checkout_shipping_method_bottom" />
        </form>
    </div>
</div>

<script sm-target-zone="scripts" data-origin="shipping-method">
    $(function () {
        $('.checkout-data .opt-radio').on('change', function (e) {
            $('.checkout-data .opt-list-item').removeClass('active');
            var item = $(this).closest('.opt-list-item');
            item.addClass("active");
        });

        $('.shipping-method-next-step-button').on('click', function () {
            $('#nextstep').trigger('click');
            return false;
        });
    });

    // Existing jQuery submit handler
    $('form[asp-action="ShippingMethod"]').on('submit', function () {
        var selected = $('.opt-radio:checked[data-shipping-name="By Ground"]');
        if (selected.length) {
            var container = selected.closest('[data-index]');
            var address = container.find('.map-address-input').val();
            if (!address || !address.trim()) {
                alert('Please enter your address or use Current Location.');
                container.find('.map-address-input').focus();
                return false; // Block submit if address missing
            }
            $('#ByGroundAddress').val(address); // Set hidden field
        } else {
            $('#ByGroundAddress').val('');
        }
    });

    // Your vanilla JS handler (optional, if you want to support non-jQuery as well)
    document.querySelector('form').addEventListener('submit', () => {
        const visibleAddress = document.querySelector('.map-address-input')?.value;
        const hiddenInput = document.querySelector('#HiddenByGroundAddress');
        if (hiddenInput && visibleAddress) {
            hiddenInput.value = visibleAddress;
        }
    });
</script>
