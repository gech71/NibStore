@using Smartstore.Web.Models.Identity

@model RegisterModel

@{
    Assets.AppendTitleParts(T("PageTitle.Register"));
    var returnUrl = Context.Request.Query["returnUrl"].ToString();
}

<form asp-route="Register" asp-route-returnUrl="@returnUrl" id="register-form" method="post" class="form-horizontal" role="form">
    <div class="page registration-page">
        <div class="page-title">
            <h1 class="h3">@T("Account.Register")</h1>
        </div>
        <div class="page-body row">
            <div class="col-12 col-lg-9 col-xl-8">

                <div asp-validation-summary="ModelOnly"></div>

                <fieldset class="content-group">
                    <legend><span>@T("Account.YourPersonalDetails")</span></legend>

                    <honeypot sm-enabled="true" />

                    <div sm-if="Model.UsernamesEnabled" class="form-group row">
                        <label asp-for="Username" class="col-md-3 col-form-label required"></label>
                        <div class="col-md-9">
                            @if (Model.CheckUsernameAvailabilityEnabled)
                            {
                                <div class="input-group">
                                    <input asp-for="Username" class="remember" autocomplete="username" />
                                </div>
                            }
                            else
                            {
                                <input asp-for="Username" class="remember" autocomplete="username" />
                            }
                            <span asp-validation-for="Username"></span>
                        </div>
                    </div>

                    <zone name="gdpr_consent" />
                </fieldset>
                
                <fieldset sm-if="Model.PhoneEnabled" class="content-group">
                    <div sm-if="Model.PhoneEnabled" class="form-group row">
                        <label asp-for="Phone" class="col-md-3 col-form-label" attr-class='(Model.PhoneRequired, "required")'></label>
                        <div class="col-md-9">
                            <input asp-for="Phone" sm-required="Model.PhoneRequired" class="remember" autocomplete="tel" />
                            <span asp-validation-for="Phone"></span>
                        </div>
                    </div>
  <!--tade  -->
     <!-- Send OTP Button -->
                    <div class="form-group row">
                        <div class="col-md-9 offset-md-3">
                            <button type="button" class="btn btn-outline-secondary" onclick="sendOtp()">Get OTP</button>
                            <span id="otp-message" class="text-success"></span>
                        </div>
                    </div>

                    <!-- OTP Input -->
                    <div id="otp-section" class="form-group row d-none">
                          <label class="col-md-3 col-form-label required" for="OtpCode">OTP</label>
                    <div class="col-md-9">
                          <input type="text" id="OtpCode" name="OtpCode" class="form-control" placeholder="Enter OTP" required />
                    <span class="text-danger field-validation-valid" data-valmsg-for="OtpCode" data-valmsg-replace="true"></span>
                    </div>
                    </div>

                </fieldset>

                <div class="form-group row">
                    <div class="col-12 text-muted">
                        @T("Common.FormFields.Required.Hint")
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col">
                        <button type="submit" class="btn btn-primary btn-lg" name="register-button" id="register-button">
                            @T("Account.Register.Button")
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


   
<script sm-target-zone="scripts" data-origin="register">
    $(function () {
        restoreRememberedFormFields("registerVals");

        _.delay(function () {
            $(".country-selector").trigger("change");
        }, 50);
    });

    const form = document.getElementById('register-form');
    form.addEventListener('focusout', (event) => {
        rememberFormFields("register-form", "registerVals");
    });
</script>

   @section scripts {
    
   <script src="/lib/jquery/jquery-3.7.1.js"></script>

   

    <!-- Load jQuery plugin AFTER jQuery -->
    <script src="/lib/jquery-plugins/megaMenu.js"></script>

    <script>
    let countdownTimer;
    const cooldownSeconds = 60; // cooldown duration in seconds

    function sendOtp() {
        const phoneInput = document.querySelector('[name="Phone"]');
        const phone = phoneInput.value.trim();
        const btn = event.target; // the clicked button (Get OTP)

        if (!phone) {
            alert("Please enter your phone number first.");
            return;
        }

        // Disable button and start countdown
        btn.disabled = true;
        let remaining = cooldownSeconds;
        btn.innerText = `Wait ${remaining}s`;

        countdownTimer = setInterval(() => {
            remaining--;
            if (remaining > 0) {
                btn.innerText = `Wait ${remaining}s`;
            } else {
                clearInterval(countdownTimer);
                btn.disabled = false;
                btn.innerText = "Get OTP";
            }
        }, 1000);

        fetch('/otp/send', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: 'phoneNumber=' + encodeURIComponent(phone)
        })
        .then(res => res.json())
        .then(data => {
            document.getElementById('otp-message').innerText = `${data.message} Your OTP is: ${data.otp}`;

            // Show OTP input field
            const otpSection = document.getElementById('otp-section');
            otpSection.classList.remove('d-none');
        })
        .catch(err => {
            console.error(err);
            alert('Failed to send OTP.');

            // On failure, stop countdown and re-enable button immediately
            clearInterval(countdownTimer);
            btn.disabled = false;
            btn.innerText = "Get OTP";
        });
    }
</script>

}