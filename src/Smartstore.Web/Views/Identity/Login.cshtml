@using Smartstore.Core.Identity
@using Smartstore.Web.Models.Identity

@model LoginModel

@{
    Assets.AppendTitleParts(T("PageTitle.Login"));
    Assets.AddMetaRobots();

    var registerUrl = Url.RouteUrl("Register");
    var returnUrl = Context.Request.Query["returnUrl"].ToString();
    if (returnUrl.HasValue())
    {
        registerUrl = Display.ModifyQueryString(registerUrl, "returnUrl=" + returnUrl.UrlEncode());
    }

    var currentUser = WorkContext.CurrentCustomer;
}

@{
    async Task SignInBlock()
    {
        <h3 class="text-center mb-4">
            @T("Account.Login.ReturningCustomer")
        </h3>

        <div asp-validation-summary="ModelOnly">@T("Account.Login.Unsuccessful")</div>

        <form asp-route="Login" asp-route-returnurl="@returnUrl" method="post" autocomplete="off">
            <!-- Phone Number Input -->
            <div class="form-floating mb-3">
                <input asp-for="PhoneNumber" class="form-control" autofocus="autofocus" autocomplete="tel" placeholder="@Html.DisplayNameFor(x => x.PhoneNumber)" />
                <label asp-for="PhoneNumber"></label>
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <!-- Send OTP Button -->
            <div class="mb-3">
                <button type="button" id="btn-send-otp" class="btn btn-outline-secondary" onclick="sendOtp()">Get OTP</button>
                <span id="otp-message" class="text-success ms-2"></span>
            </div>

            <!-- OTP Input (Initially hidden) -->
            <div class="form-floating mb-3 d-none" id="otp-code-section">
                <input asp-for="OtpCode" class="form-control" placeholder="Enter OTP" />
                <label asp-for="OtpCode"></label>
                <span asp-validation-for="OtpCode" class="text-danger"></span>
            </div>

            <!-- Remember Me & Forgot Password -->
            <div class="form-group d-flex justify-content-between align-items-center">
                <input asp-for="RememberMe" sm-switch="false" />
                <div class="forgot-password">
                    <a asp-route="PasswordRecovery" rel="nofollow">@T("Account.Login.ForgotPassword")</a>
                </div>
            </div>

            <!-- Submit -->
            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-lg btn-block btn-login btn-prevent-multiclick">
                    @T("Account.Login.LoginButton")
                </button>
            </div>
        </form>

        @section Scripts {
            <script src="/lib/jquery/jquery-3.7.1.js"></script>
            <script src="/lib/jquery-plugins/megaMenu.js"></script>
            <script>
                let countdownDuration = 60;
                let countdownInterval;

                function sendOtp() {
                    var phoneNumber = document.querySelector('[name="PhoneNumber"]').value;
                    if (!phoneNumber) {
                        alert("Please enter your phone number first.");
                        return;
                    }

                    disableOtpButton();

                    fetch('/otp/send', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: 'phoneNumber=' + encodeURIComponent(phoneNumber)
                    })
                    .then(res => res.json())
                    .then(data => {
                        document.getElementById('otp-message').innerText = `Your OTP is: ${data.otp}`;
                        document.getElementById('otp-code-section').classList.remove('d-none');
                    })
                    .catch(err => {
                        alert('Error sending OTP.');
                        enableOtpButton();
                    });
                }

                function disableOtpButton() {
                    const btn = document.getElementById('btn-send-otp');
                    btn.disabled = true;
                    let timeLeft = countdownDuration;
                    btn.innerText = `Resend OTP (${timeLeft}s)`;

                    countdownInterval = setInterval(() => {
                        timeLeft--;
                        btn.innerText = `Resend OTP (${timeLeft}s)`;
                        if (timeLeft <= 0) {
                            clearInterval(countdownInterval);
                            enableOtpButton();
                        }
                    }, 1000);
                }

                function enableOtpButton() {
                    const btn = document.getElementById('btn-send-otp');
                    btn.disabled = false;
                    btn.innerText = "Get OTP";
                }
            </script>
        }
    }

    async Task RegisterBlock()
    {
        <div class="page-info">
            @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo", bodyOnly = true, isLead = true })
        </div>

        <div class="register-block">
            @if (Model.CheckoutAsGuest)
            {
                @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister", bodyOnly = true })

                <div class="row g-2">
                    <div class="col-12">
                        <a class="btn btn-warning btn-lg btn-block register-button" href="@registerUrl">
                            @T("Account.Register.Button")
                        </a>
                    </div>
                    <div class="col-12">
                        <a class="btn btn-secondary btn-lg btn-block checkout-as-guest-button" asp-route="Checkout">
                            <span>@T("Account.Login.CheckoutAsGuest")</span>
                            <i class="fa fa-angle-right"></i>
                        </a>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-12 col-lg-auto">
                        <a class="btn btn-warning btn-lg btn-block register-button" href="@registerUrl">
                            @T("Account.Register.Button")
                        </a>
                    </div>
                </div>
            }
        </div>
    }
}

<div class="page login-page">
    <div class="row mb-4">
        <div class="col-12 col-md-10 offset-md-1 col-xl-8 offset-xl-2">
            <div class="page-title">
                <h1>@T("Account.Login.Welcome")</h1>
            </div>
            <div class="card shadow-sm rounded-lg overflow-hidden">
                <div class="row">
                    <div class="col-12 col-lg-7 login-box">
                        <div class="p-3 p-xxl-4">
                            @{ await SignInBlock(); }
                        </div>
                    </div>
                    <div class="col-12 col-lg-5 register-box d-flex align-items-center">
                        <div class="p-3 p-xxl-4">
                            @{ await RegisterBlock(); }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
